version: "3.8"
services:
  # Database
  db:
    image: mysql:5.7
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    networks:
      - wp_network

  # WordPress
  wordpress:
    image: wordpress:latest
    depends_on:
      - db
    ports:
      - "80:80" # Expose container port 80 on host port 80
    restart: always
    user: "${UID}:${GID}"
    env_file: .env
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: ${DB_NAME}
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD}
      WORDPRESS_DEBUG: ${WP_DEBUG:-1}
    volumes:
      - ./themes:/var/www/html/wp-content/themes
      - wp_content:/var/www/html/wp-content/plugins
      - wp_content:/var/www/html/wp-content/uploads
    networks:
      - wp_network

  # Next.js Frontend
  nextjs:
    build:
      context: . # Use root where Dockerfile is located
      dockerfile: Dockerfile # Explicitly specify Dockerfile
    ports:
      - "3000:3000" # Expose Next.js default port 3000 to host
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - WORDPRESS_API_URL=http://wordpress:80/wp-json
      - NEXT_PUBLIC_WORDPRESS_URL=http://${DOMAIN:-localhost}
    volumes:
      - ./nextjs-frontend:/app
      - /app/node_modules
    depends_on:
      - wordpress
    networks:
      - wp_network
    restart: always

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    depends_on:
      - db
    ports:
      - "${PMA_PORT:-8080}:80" # Expose phpMyAdmin on host port 8080
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    networks:
      - wp_network

volumes:
  db_data:
  wp_content:

networks:
  wp_network:
    driver: bridge
